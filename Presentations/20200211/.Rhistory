inherit.aes = FALSE,
color = "orange",
size = 2) +
xlim(7.57, 7.77) +
ylim(45, 45.14) +
theme_void() +
theme(    plot.background = element_rect(fill = "#282828")  )
ggplot() +
geom_sf(data = streets$osm_lines,
inherit.aes = FALSE,
color = "orange",
size = .4,
alpha = .8) +
geom_sf(data = small_streets$osm_lines,
inherit.aes = FALSE,
color = "orange",
size = .2,
alpha = .3) +
geom_sf(data = river$osm_lines,
inherit.aes = FALSE,
color = "purple",
size = .8,
alpha = .5) +
geom_sf(data = coop$osm_points,
inherit.aes =FALSE,
size = 2,
alpha = .3,
colour="red") +
geom_sf(data = bridge$osm_lines,
inherit.aes = FALSE,
color = "orange",
size = 2) +
xlim(7.57, 7.77) +
ylim(45, 45.14) +
theme_void() +
theme(    plot.background = element_rect(fill = "#282828")  )
freq_am <-data.frame(xtabs(~cyl + gear + am, mtcars))
freq_am
freq_am$Freq_am <- freq_am$Freq * (-1)^as.integer(as.character(freq_am$am))
freq_am
p <- ggplot(freq_am, (aes(x = cyl, y = Freq, fill = Freq_am))) +
geom_col(position = "fill", width = 1) +
scale_fill_gradient2() +
facet_grid(gear ~ ., as.table = FALSE, switch = "y") +
scale_y_continuous(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0))
p
p + theme(panel.grid = element_blank()
, axis.ticks = element_blank()
, axis.text.y = element_blank()
, strip.background = element_blank()
, panel.spacing.y = unit(0, "pt")
) +
ylab("gear")
ggplot(freq_am, (aes(x = cyl, y = Freq, fill = Freq_am))) +
geom_col(position = "fill", width = 1) +
scale_fill_gradient2()
ggplot(freq_am, (aes(x = cyl, y = Freq, fill = Freq_am))) +
geom_col(position = "fill", width = 1) +
scale_fill_gradient2() +
facet_grid(gear ~ ., as.table = FALSE, switch = "y")
ggplot(freq_am, (aes(x = cyl, y = Freq, fill = Freq_am))) +
geom_col(position = "fill", width = 1) +
scale_fill_gradient2() +
facet_grid(gear ~ ., as.table = FALSE, switch = "y") +
scale_y_continuous(expand = c(0, 0))
ggplot(freq_am, (aes(x = cyl, y = Freq, fill = Freq_am))) +
geom_col(position = "fill", width = 1) +
scale_fill_gradient2() +
facet_grid(gear ~ ., as.table = FALSE, switch = "y") +
scale_y_continuous(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0))
p + theme(panel.grid = element_blank()
, axis.ticks = element_blank()
, axis.text.y = element_blank()
, strip.background = element_blank()
, panel.spacing.y = unit(0, "pt")
) +
ylab("gear")
p <- ggplot(freq_am, (aes(x = cyl, y = Freq, fill = Freq_am))) +
geom_col(position = "fill", width = 1) +
scale_fill_gradient2() +
facet_grid(. ~ gear, as.table = FALSE, switch = "y") +
scale_y_continuous(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0))
p + theme(panel.grid = element_blank()
, axis.ticks = element_blank()
, axis.text.y = element_blank()
, strip.background = element_blank()
, panel.spacing.y = unit(0, "pt")
) +
ylab("gear")
p <- ggplot(freq_am, (aes(x = cyl, y = Freq, fill = Freq_am))) +
geom_col(position = "fill", width = 1) +
scale_fill_gradient2() +
facet_grid(. ~ gear, as.table = FALSE, switch = "y") +
scale_x_continuous(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0))
p
p <- ggplot(freq_am, (aes(x = cyl, y = Freq, fill = Freq_am))) +
geom_col(position = "fill", width = 1) +
scale_fill_gradient2() +
facet_grid(. ~ gear, as.table = FALSE, switch = "y") +
scale_y_continuous(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0))
p
p <- ggplot(freq_am, (aes(x = cyl, y = Freq, fill = Freq_am))) +
geom_col(position = "fill", width = 1) +
scale_fill_gradient2() +
facet_grid(gear ~ ., as.table = FALSE, switch = "y") +
scale_y_continuous(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0))
p
x <- read_csv("~/Downloads/20191205_MapAllVIruses.csv")
x
x %>%
pivot_longer(cols = starts_with("T"),
names_to = Sample,
values_to = Reads)
x %>%
pivot_longer(cols = starts_with("T"),
names_to = "Sample",
values_to = "Reads")
x %>%
pivot_longer(cols = `THR-A_All`:Thrips2019_Negative,
names_to = "Sample",
values_to = "Reads")
x %>%
pivot_longer(cols = `THR-A_All`:Thrips2019_Positive,
names_to = "Sample",
values_to = "Reads")
install.packages("blastula")
remotes::install_github("rich-iannone/blastula")
library(blastula)
create_smtp_creds_file(
file = "~/.Rblastula",
user = "chiapello.m@gmail.com",
provider = "gmail"
)
sender_name <- "Shelly"
sending_date <-
paste0(
format(Sys.time(), "%A, %B "),
format(Sys.time(), "%d") %>% as.numeric(),
", ",
format(Sys.time(), "%Y")
)
body_text <-
glue(
"
Hello,
I just wanted to let you know that the *thing* that
you asked me for is ready to pick up. So, come over
and do that.
Cheers,
{sender_name}
"
) %>% md()
footer_text <- glue("Sent on {sending_date}.")
# Compose the email message
compose_email(
body = body_text,
footer = footer_text
)
sender_name <- "Shelly"
sending_date <-
paste0(
format(Sys.time(), "%A, %B "),
format(Sys.time(), "%d") %>% as.numeric(),
", ",
format(Sys.time(), "%Y")
)
body_text <-
glue(
"
Hello,
I just wanted to let you know that the *thing* that
you asked me for is ready to pick up. So, come over
and do that.
Cheers,
{sender_name}
"
) %>% md()
glue(
"
Hello,
I just wanted to let you know that the *thing* that
you asked me for is ready to pick up. So, come over
and do that.
Cheers,
{sender_name}
"
)
glue(
"
Hello,
I just wanted to let you know that the *thing* that
you asked me for is ready to pick up. So, come over
and do that.
Cheers,
Marco
"
)
library(tidyverse)
glue(
"
Hello,
I just wanted to let you know that the *thing* that
you asked me for is ready to pick up. So, come over
and do that.
Cheers,
Marco
"
)
?glue
body_text <-
glue::glue(
"
Hello,
I just wanted to let you know that the *thing* that
you asked me for is ready to pick up. So, come over
and do that.
Cheers,
Marco
"
) %>% md()
glue::glue(
"
Hello,
I just wanted to let you know that the *thing* that
you asked me for is ready to pick up. So, come over
and do that.
Cheers,
Marco
"
)
body_text <-
glue::glue(
"
Hello,
I just wanted to let you know that the *thing* that
you asked me for is ready to pick up. So, come over
and do that.
Cheers,
Marco
"
) %>% md()
footer_text <- glue("Sent on {sending_date}.")
# Compose the email message
compose_email(
body = body_text,
footer = footer_text
)
glue("Sent on {sending_date}.")
footer_text <- glue::glue("Sent on {sending_date}.")
footer_text
compose_email(
body = body_text,
footer = footer_text
)
# Compose the email message
text_message <- compose_email(
body = body_text,
footer = footer_text
)
test_message %>%
smtp_send(
from = "chiapello.m@email.net",
to = "mc983.cam@gmail.com",
subject = "Testing the `smtp_send()` function",
credentials = creds_file(file = "~/.Rblastula")
)
# Compose the email message
text_message <- compose_email(
body = body_text,
footer = footer_text
)
text_message %>%
smtp_send(
from = "chiapello.m@email.net",
to = "mc983.cam@gmail.com",
subject = "Testing the `smtp_send()` function",
credentials = creds_file(file = "~/.Rblastula")
)
md()
glue::glue(
"
Hello,
I just wanted to let you know that the *thing* that
you asked me for is ready to pick up. So, come over
and do that.
Cheers,
Marco
"
) %>% md()
test_message <- prepare_test_message()
test_message
x <- tibble(Sequence_ID = c("Marco", "Fabiana", "Nicolo"),
A = c(10, 100, 50),
B = c(100, 10, 100))
x %>%
ggplot(aes(x = A, xend = B, y = 1:3, yend = 1:3, label = Sequence_ID)) +
geom_segment()
x %>%
ggplot(aes(x = A, xend = B, y = 1:3, yend = 1:3, label = Sequence_ID)) +
geom_segment(lineend = "butt",
linejoin = "mitre")
x %>%
ggplot(aes(x = A, xend = B, y = 1:3, yend = 1:3, label = Sequence_ID)) +
geom_segment(lineend = rep("butt", 3),
linejoin = rep("mitre", 3))
size = 3, arrow = arrow(length = unit(0.3, "inches"))
x %>%
ggplot(aes(x = A, xend = B, y = 1:3, yend = 1:3, label = Sequence_ID)) +
geom_segment(lineend = rep("butt", 3),
linejoin = rep("mitre", 3),
size = 3, arrow = arrow(length = unit(0.3, "inches")))
x %>%
ggplot(aes(x = A, xend = B, y = 1:3, yend = 1:3, label = Sequence_ID)) +
geom_segment(lineend = rep("butt", 3),
linejoin = rep("mitre", 3),
size = 3, arrow = arrow(length = unit(0.3, "inches"))) +
geom_text(hjust = 'outside', nudge_x = -0.2)
x %>%
ggplot(aes(x = A, xend = B, y = 1:3, yend = 1:3, label = Sequence_ID)) +
geom_segment(lineend = rep("butt", 3),
linejoin = rep("mitre", 3),
size = 3, arrow = arrow(length = unit(0.3, "inches"))) +
geom_text(hjust = 'outside', nudge_x = -2)
x %>%
ggplot(aes(x = A, xend = B, y = 1:3, yend = 1:3, label = Sequence_ID)) +
geom_segment(lineend = rep("butt", 3),
linejoin = rep("mitre", 3),
size = 3, arrow = arrow(length = unit(0.3, "inches"))) +
geom_text(aes(y = 1:3 - .5))
x %>%
ggplot(aes(x = A, xend = B, y = 1:3, yend = 1:3, label = Sequence_ID)) +
geom_segment(lineend = rep("butt", 3),
linejoin = rep("mitre", 3),
size = 3, arrow = arrow(length = unit(0.3, "inches"))) +
geom_text(aes(y = 1:3 - .5, hjust = .5))
x %>%
ggplot(aes(x = A, xend = B, y = 1:3, yend = 1:3, label = Sequence_ID)) +
geom_segment(lineend = rep("butt", 3),
linejoin = rep("mitre", 3),
size = 3, arrow = arrow(length = unit(0.3, "inches"))) +
geom_text(aes(y = 1:3 - .5, hjust = 1))
x %>%
ggplot(aes(x = A, xend = B, y = 1:3, yend = 1:3, label = Sequence_ID)) +
geom_segment(lineend = rep("butt", 3),
linejoin = rep("mitre", 3),
size = 3, arrow = arrow(length = unit(0.3, "inches"))) +
geom_text(aes(y = 1:3 - .5, hjust = -1))
library(tidyverse)
df1 <- readRDS("Downloads/df1.RDS")
df1
df1 %>%
spread(variable, value)
df1 %>%
spread(variable, value) %>%
select(GOMFID, Count, Size, Term) %>%
gather(variable, value, -Term)
df1 %>%
spread(variable, value) %>%
select(GOMFID, Count, Size, Term) %>%
gather(variable, value, -Term, -GOMFID)
df1 %>%
spread(variable, value) %>%
select(GOMFID, Count, Size, Term) %>%
gather(variable, value, -Term, -GOMFID) %>%
unite(GOMFID, Term, sep = ":")
df1 %>%
spread(variable, value) %>%
select(GOMFID, Count, Size, Term) %>%
gather(variable, value, -Term, -GOMFID) %>%
unite("ID", c("GOMFID", "Term"), sep = ":")
df1 %>%
spread(variable, value) %>%
select(GOMFID, Count, Size, Term) %>%
gather(variable, value, -Term, -GOMFID) %>%
unite("ID", c("GOMFID", "Term"), sep = ":") %>%
ggplot(aes(x = ID, y=as.numeric(value), fill=variable), xlab="Age Group") +
geom_bar(stat="identity", width=.5, position = "dodge" ) +
coord_flip()
df1 %>%
spread(variable, value) %>%
select(GOMFID, Count, Size, Term) %>%
gather(variable, value, -Term, -GOMFID) %>%
unite("ID", c("GOMFID", "Term"), sep = ":") %>%
ggplot(aes(x = ID, y=as.numeric(value), fill=variable), xlab="Age Group") +
geom_bar(stat="identity", width=.5, position = "dodge" ) +
coord_flip() +
scale_y_log10()
View(df1)
df1 %>%
spread(variable, value)
df1
df1 <- readRDS("Downloads/df1.DRS")
df1
df1 %>%
select(GOMFID, Count, Size, Term) %>%
gather(variable, value, -Term, -GOMFID) %>%
unite("ID", c("GOMFID", "Term"), sep = ":") %>%
ggplot(aes(x = ID, y=as.numeric(value), fill=variable), xlab="Age Group") +
geom_bar(stat="identity", width=.5, position = "dodge" ) +
coord_flip() +
scale_y_log10()
df1 %>%
select(GOMFID, Count, Size, Term) %>%
gather(variable, value, -Term, -GOMFID) %>%
unite("ID", c("GOMFID", "Term"), sep = ": ") %>%
ggplot(aes(x = ID, y=as.numeric(value), fill=variable), xlab="Age Group") +
geom_bar(stat="identity", width=.5, position = "dodge" ) +
coord_flip() +
scale_y_log10()
# All packages used below must be installed first
library(devtools)
# devtools::install_github("laresbernardo/lares")
library(lares)
library(ggplot2)
plot_timeline2 <- function(event, start, end = start + 1, label = NA, group = NA,
title = "Curriculum Vitae Timeline", subtitle = "Antoine Soetewey",
size = 7, colour = "orange", save = FALSE, subdir = NA) {
df <- data.frame(
Role = as.character(event), Place = as.character(label),
Start = lubridate::date(start), End = lubridate::date(end),
Type = group
)
cvlong <- data.frame(pos = rep(
as.numeric(rownames(df)),
2
), name = rep(as.character(df$Role), 2), type = rep(factor(df$Type,
ordered = TRUE
), 2), where = rep(
as.character(df$Place),
2
), value = c(df$Start, df$End), label_pos = rep(df$Start +
floor((df$End - df$Start) / 2), 2))
maxdate <- max(df$End)
p <- ggplot(cvlong, aes(
x = value, y = reorder(name, -pos),
label = where, group = pos
)) + geom_vline(
xintercept = maxdate,
alpha = 0.8, linetype = "dotted"
) + labs(
title = title,
subtitle = subtitle, x = NULL, y = NULL, colour = NULL
) +
theme_lares2() + theme(panel.background = element_rect(
fill = "white",
colour = NA
), axis.ticks = element_blank(), panel.grid.major.x = element_line(
size = 0.25,
colour = "grey80"
))
if (!is.na(cvlong$type)[1] | length(unique(cvlong$type)) >
1) {
p <- p + geom_line(aes(color = type), size = size) +
facet_grid(type ~ ., scales = "free", space = "free") +
guides(colour = FALSE) +
scale_colour_hue()
}
else {
p <- p + geom_line(size = size, colour = colour)
}
p <- p + geom_label(aes(x = label_pos),
colour = "black",
size = 2, alpha = 0.7
)
if (save) {
file_name <- "cv_timeline.png"
if (!is.na(subdir)) {
dir.create(file.path(getwd(), subdir), recursive = T)
file_name <- paste(subdir, file_name, sep = "/")
}
p <- p + ggsave(file_name, width = 8, height = 6)
message(paste("Saved plot as", file_name))
}
return(p)
}
order <- c("Role", "Place", "Type", "Start", "End")
today <- as.character(Sys.Date())
### Edit from here ###
cv <- data.frame(rbind(
c("PhD in Statistics", "University3", "Academic", "2017-09-01", today),
c("MSc in Econometrics", "University2", "Academic", "2015-09-01", "2017-08-31"),
c("BSc in Economics", "University1", "Academic", "2010-09-01", "2013-08-31"),
c("Job title2", "Company2", "Work Experience", "2016-09-01", today),
c("Job title1", "Company1", "Work Experience", "2013-08-31", "2015-08-31"),
c("Extra1", "Place1", "Extra", "2015-05-01", today),
c("Extra2", "Place2", "Extra", "2019-01-01", today),
c("Extra3", NA, "Extra", "2019-12-01", today)
))
### Edit until here ###
colnames(cv) <- order
colour <- c("red", "blue", "green")
plot_timeline2(
event = cv$Role,
start = cv$Start,
end = cv$End,
label = cv$Place,
group = cv$Type,
save = FALSE,
subtitle = "Antoine Soetewey" # replace with your name
)
install.packages("lares")
devtools::install_github("laresbernardo/lares")
xaringan::inf_mr()
setwd("~/Documents/001_WORK/IPSP-CNR-Bioinformatics/monthlyMeetings/Presentations/20200211")
xaringan:::inf_mr()
version
